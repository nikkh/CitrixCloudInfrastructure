{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "pocEnvironmentName": {
      "type": "string",
      "metadata": {
        "description": "This is the root name for all resources created as part of this template.  For example if you specify mypoc here the domain controller will be mypoc-AD.  please use only lowercase letters."
      },
      "defaultValue": "ccpoc"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account for the domain and all VMs"
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the VNET for this resource location "
      },
      "defaultValue": "10.60.0.0/16"
    },
    "adSubnetRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the AD subnet created in the new VNET"
      },
      "defaultValue": "10.60.0.0/24"
    },
    "cloudConnectorSubnetRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the Cloud Connector subnet created in the new VNET"
      },
      "defaultValue": "10.60.1.0/24"
    },
    "vdaSubnetRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the VDA subnet created in the new VNET"
      },
      "defaultValue": "10.60.2.0/24"
    },
    "domainControllerStaticIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD VM"
      },
      "defaultValue": "10.60.0.4"
    }

  },
  "variables": {
    "virtualNetworkName": "[concat(parameters('pocEnvironmentName'),'VNet')]",
    "adVMName": "[concat(parameters('pocEnvironmentName'),'-AD')]",
    "cc1VMName": "[concat(parameters('pocEnvironmentName'),'-CC1')]",
    "cc2VMName": "[concat(parameters('pocEnvironmentName'),'-CC2')]",
    "pocAdminUser": "[concat(parameters('pocEnvironmentName'),'admin')]",
    "adDomain": "[concat(parameters('pocEnvironmentName'),'.local')]",
    "adNicName": "[concat(variables('adVMName'), 'nic')]",
    "adNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adNicName'))]",
    "adDataDisk": "ADDataDisk",
    "adDataDiskSize": 1000,
    "adIPConfigID": "[concat(variables('adNicId'),'/ipConfigurations/adipconfig')]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "adSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('adSubnetName'))]",
    "adSubnetName": "adSubnet",
    "vdaSubnetName": "vdaSubnet",
    "cloudConnectorSubnetName": "cloudConnectorSubnet",
    "ccSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('cloudConnectorSubnetName'))]",
    "cc1NicName": "[concat(variables('cc1VMName'), '-nic')]",
    "cc2NicName": "[concat(variables('cc2VMName'), '-nic')]",
    "subnets": [
      {
        "name": "[variables('adSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('adSubnetRange')]"
        }
      },
      {
        "name": "[variables('vdaSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('vdaSubnetRange')]"
        }
      },
      {
        "name": "[variables('cloudConnectorSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('cloudConnectorSubnetRange')]"
        }
      }
    ],

    "createbasevnetURL": "[uri(deployment().properties.templateLink.uri, 'shared_resources/createbasevnet.json')]",
    "createstorageaccountURL": "[uri(deployment().properties.templateLink.uri, 'shared_resources/createstorageaccount.json')]",
    "updatevnetdnsserverURL": "[uri(deployment().properties.templateLink.uri, 'shared_resources/updatevnetdnsserver.json')]",
    "createavailabilitysetsURL": "[uri(deployment().properties.templateLink.uri, 'shared_resources/createavailabilitysets.json')]",
    "createdomaincontrollernicURL": "[uri(deployment().properties.templateLink.uri, 'shared_resources/createdomaincontrollernic.json')]",
    "createdomaincontrollerURL": "[uri(deployment().properties.templateLink.uri, 'shared_resources/createDomainController.json')]",


    "createcloudconnectorURL": "[uri(deployment().properties.templateLink.uri, 'shared_resources/createcloudconnector.json')]",
    "domainjoincloudconnectorURL": "[uri(deployment().properties.templateLink.uri, 'DSC/DomainJoinCloudConnector.ps1.zip')]",
    "ccConfigurationFunction": "DomainJoinCloudConnector.ps1\\JoinDomain",

    "createdynamicipnicURL": "[uri(deployment().properties.templateLink.uri, 'reusable/createdynamicipnic.json')]",

    "provisiondomaincontrollerURL": "[uri(deployment().properties.templateLink.uri, 'DSC/CreateADPDC.ps1.zip')]",
    "adConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
    "storageAccountNamePrefix": "[parameters('pocEnvironmentName')]",
    "createpublicipURL": "[uri(deployment().properties.templateLink.uri, 'shared_resources/createpublicip.json')]"

  },
  "resources": [
    {

      "name": "CreateADPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createpublicipURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "publicIPAddressName": {
            "value": "[concat(parameters('pocEnvironmentName'), '-AD-PIP')]"
          }


        }
      }

    },
    {
      "name": "CreateStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createstorageaccountURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "storageAccountType": {
            "value": "Standard_LRS"
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storageAccountNamePrefix')]"
          }
        }
      }
    },
    {
      "name": "CreateResourceLocationVirtualNetwork",

      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createbasevnetURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "CreateAvailabilitySets",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createAvailabilitySetsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "cloudConnectorAvailabilitySetName": {
            "value": "cloudConnectorAvailabilitySet"
          }
        }
      }

    },

    {
      "name": "CreateNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateResourceLocationVirtualNetwork",
        "Microsoft.Resources/deployments/CreateADPublicIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createdomaincontrollernicURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "adNicName": {
            "value": "[variables('adNicName')]"
          },
          "domainControllerStaticIPAddress": {
            "value": "[parameters('domainControllerStaticIPAddress')]"
          },
          "adSubnetRef": {
            "value": "[variables('adSubnetRef')]"
          },
          "publicIPRef": {
            "value": "[reference('CreateADPublicIP').outputs.publicIpAddressResourceId.value]"
          }
        }
      }
    },



    {
      "name": "CreateDomainController",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateStorageAccount",
        "Microsoft.Resources/deployments/CreateResourceLocationVirtualNetwork",
        "Microsoft.Resources/deployments/CreateNetworkInterfaces"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createdomaincontrollerUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "adVMName": {
            "value": "[variables('adVMName')]"
          },
          "adVMSize": {
            "value": "Standard_D1"
          },

          "adminUsername": {
            "value": "[variables('pocAdminUser')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountName": {
            "value": "[reference('CreateStorageAccount').outputs.newStorageAccount.value]"
          },
          "adDataDisk": {
            "value": "[variables('adDataDisk')]"
          },
          "adNicName": {
            "value": "[variables('adNicName')]"
          },
          "adModulesURL": {
            "value": "[variables('provisiondomaincontrollerURL')]"
          },
          "adConfigurationFunction": {
            "value": "[variables('adConfigurationFunction')]"
          },
          "domainName": {
            "value": "[variables('adDomain')]"
          }
        }
      }
    },
    {
      "name": "UpdateVNetDNSServer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateDomainController"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('updatevnetdnsserverURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('domainControllerStaticIPAddress')]"
            ]
          }
        }
      }
    },


    {
      "name": "CreateFirstCloudConnectorNic",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdateVNetDNSServer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createdynamicipnicURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "nicName": {
            "value": "[variables('cc1NicName')]"
          },
          "subnetRef": {
            "value": "[variables('ccSubnetRef')]"
          }
          
            
          }
        }
      
    },


    {
      "name": "CreateFirstCloudConnector",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdateVNetDNSServer"


      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createcloudconnectorUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "vmName": {
            "value": "[variables('cc1VMName')]"
          },
          "vmSize": {
            "value": "Standard_D1"
          },

          "adminUsername": {
            "value": "[variables('pocAdminUser')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountName": {
            "value": "[reference('CreateStorageAccount').outputs.newStorageAccount.value]"
          },

          "vmNicName": {
            "value": "[variables('cc1NicName')]"
          },
          "ccModulesURL": {
            "value": "[variables('domainjoincloudconnectorURL')]"
          },
          "ccConfigurationFunction": {
            "value": "[variables('ccConfigurationFunction')]"
          },
          "domainName": {
            "value": "[variables('adDomain')]"
          }
        }
      }
    }

  ],

    "outputs": {
    }
  }
  
